version : '3.5'
services :
  rasa_run :
    container_name: rasa_run
    depends_on:
      - mongo
      - action_server
    image: rasa/rasa:1.2.9
    restart: unless-stopped
    ports:
      - 5005:5005
    volumes:
      - ./:/app
    command:
      - run

  mongo:
    container_name: mongo
    image: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: rasa
      MONGO_INITDB_ROOT_PASSWORD: example
    depends_on:
      - mongo-express

  mongo-express:
    restart: always
    container_name: mongo-express
    image: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: rasa
      ME_CONFIG_MONGODB_ADMINPASSWORD: example

  rasa_shell :
    depends_on:
        - mongo
        - action_server
    container_name: rasa_shell
    image: rasa/rasa:1.2.9
    ports:
      - 5005:5005
    volumes:
      - ./:/app
    command:
      - shell

  rasa_train :
    container_name: rasa_train
    image: rasa/rasa:1.2.9
    ports:
      - 5005:5005
    volumes:
      - ./:/app
    command:
      - train

  rasa_interactive:
    depends_on:
      - mongo
      - action_server
    image: rasa/rasa:1.2.9
    ports:
      - 5006:5006
    volumes:
      - ./:/app
    command:
      - interactive

  rasa_visualize:
    image: rasa/rasa:1.2.9
    ports:
      - 5005:5005
    volumes:
      - ./:/app
    command:
      - visualize

  action_server:
    container_name: action_server
    image: rasa/rasa-sdk:latest
    volumes:
      - ./actions:/app/actions
 # Analitics ElasticSearch Stack.
  elasticsearch:
    build:
      context: .
      dockerfile: ./docker/elasticsearch.Dockerfile
    restart: unless-stopped
    ports:
      - 9200:9200
      - 9300:9300
    env_file:
      - env/elasticsearch.env
    volumes:
      - esbackup:/usr/share/elasticsearch/backup
      - ./modules/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - esdata:/usr/share/elasticsearch/data

  # Visualization layer of Analitics Stack.
  kibana:
    build:
      context: .
      dockerfile: ./docker/kibana.Dockerfile
    restart: unless-stopped
    ports:
      - 5601:5601
    env_file:
      - env/kibana.env
    depends_on:
      - elasticsearch
volumes:
  notebook_models:
  mongo_data:
  rabbit_data:
  esbackup:
  esdata:
    driver: local
